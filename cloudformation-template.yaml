AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template for 3-layer microservices architecture with ECS scaling, CloudWatch monitoring, and SNS notifications

Parameters:
  VpcCidrBlock:
    Type: String
    Default: 10.0.0.0/16
    Description: CIDR block for the VPC
  PublicSubnetCidr:
    Type: String
    Default: 10.0.1.0/24
    Description: CIDR block for the public subnet
  PrivateSubnetCidr:
    Type: String
    Default: 10.0.2.0/24
    Description: CIDR block for the private subnet
  ClusterName:
    Type: String
    Default: MyCluster
    Description: Name of the ECS Cluster
  ServiceName:
    Type: String
    Default: MyService
    Description: Name of the ECS Service
  TaskDefinitionFamily:
    Type: String
    Default: MyTaskDefinition
    Description: Task definition family name
  ContainerImage:
    Type: String
    Description: Docker image URL for the container
  ContainerPort:
    Type: Number
    Default: 5000
    Description: Port on which the container listens
  EmailAddress:
    Type: String
    Description: Email address to receive SNS notifications

Resources:

  # Foundation Layer: VPC, Subnets, and NAT Gateway
  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidrBlock
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: MyVpc

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: !Ref PublicSubnetCidr
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: PublicSubnet

  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: !Ref PrivateSubnetCidr
      Tags:
        - Key: Name
          Value: PrivateSubnet

  NatGatewayEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  NatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGatewayEIP.AllocationId
      SubnetId: !Ref PublicSubnet
      Tags:
        - Key: Name
          Value: MyNatGateway

  # Application Layer: ECS Cluster, Task Definition, and Service
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Ref ClusterName

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Ref TaskDefinitionFamily
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      Cpu: 256
      Memory: 512
      ContainerDefinitions:
        - Name: MyAppContainer
          Image: !Ref ContainerImage
          PortMappings:
            - ContainerPort: !Ref ContainerPort
              Protocol: tcp

  ECSService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref ECSCluster
      DesiredCount: 2
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - !Ref PublicSubnet
          SecurityGroups:
            - !Ref AppSecurityGroup
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100

  ECSAutoScalingRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: application-autoscaling.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: ECSAutoScalingPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ecs:UpdateService
                  - ecs:DescribeServices
                  - cloudwatch:PutMetricAlarm
                  - cloudwatch:DescribeAlarms
                  - cloudwatch:GetMetricData
                  - cloudwatch:DeleteAlarms
                Resource: "*"

  ECSScalingTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Properties:
      MaxCapacity: 10
      MinCapacity: 2
      ResourceId: !Join ["service/", [!Ref ClusterName, "/", !Ref ServiceName]]
      RoleARN: !GetAtt ECSAutoScalingRole.Arn
      ScalableDimension: ecs:service:DesiredCount
      ServiceNamespace: ecs

  ECSScaleUpPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: ScaleUpPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref ECSScalingTarget
      TargetTrackingScalingPolicyConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ECSServiceAverageCPUUtilization
        TargetValue: 70.0
        ScaleInCooldown: 60
        ScaleOutCooldown: 30

  ECSScaleDownPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: ScaleDownPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref ECSScalingTarget
      TargetTrackingScalingPolicyConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ECSServiceAverageCPUUtilization
        TargetValue: 70.0
        ScaleInCooldown: 60
        ScaleOutCooldown: 30

  # Monitoring: CloudWatch Alarms for ECS
  RunningTasksAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: HighRunningTasks
      AlarmDescription: Trigger an alarm when the number of running tasks reaches 8
      MetricName: RunningTaskCount
      Namespace: AWS/ECS
      Statistic: Average
      Period: 60
      EvaluationPeriods: 1
      Threshold: 8
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: ClusterName
          Value: !Ref ClusterName
        - Name: ServiceName
          Value: !Ref ServiceName
      AlarmActions:
        - !Ref SNSTopic

  # Security Layer: Security Groups, WAF, and GuardDuty
  AppSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref Vpc
      GroupDescription: Allow traffic to the application
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: !Ref ContainerPort
          ToPort: !Ref ContainerPort
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0

  # SNS for Notifications
  SNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: ECSNotifications
      Subscription:
        - Protocol: email
          Endpoint: !Ref EmailAddress

Outputs:
  VpcId:
    Value: !Ref Vpc
    Description: The ID of the VPC
  ECSClusterName:
    Value: !Ref ECSCluster
    Description: The name of the ECS cluster
  ECSServiceName:
    Value: !Ref ECSService
    Description: The name of the ECS service
  SNSTopicArn:
    Value: !Ref SNSTopic
    Description: The ARN of the SNS topic